Vòng lặp - Loop

1. for - Lặp với điều kiện đúng
2. for/in - Lặp qua key của đối tương
3. for/of - Lặp qua value của đối tượng
4. while - Lặp khi điều kiện đúng
5. do/while - Lặp ít nhất 1 lần, sau đó lặp khi điều kiện đúng

* For loop

    for (var i = 0; i < 10; i++) {
    console.log(i);
}

* For/in loop

    var myInfo = {
    name: 'Son Dng',
    age: 18,
    address: 'Ha noi'
    };

    for (var key in myInfo) {
        console.log(key, myInfo[key]);
    }   

- Duyệt được array và chuỗi

* For/of loop (không áp dụng được với object, cần biết đổi)

    var language = 'English';

    var languages = [
    'English',
    'German',
    'Russian',
    'Spanish',
    'Yemen'
    ];

    for (var value of languages) {
        console.log(value);
    }

- Cách áp dụng với object
        + 
            var myInfo = {
            name: 'Tien',
            age: 18
            };

            for (var value of Object.keys(myInfo)) {
                console.log(myInfo[value]);
            }

        + 
            var myInfo = {
            name: 'Tien',
            age: 18
            };

            for (var value of Object.values(myInfo)) {
                console.log(value);
            }

* while loop
    var i = 0;

    while (i < 10) {
        i++;
        console.log(i);
    }

* do/while loop
    var i = 0;
    var isSuccess = false;
    do {
        i++;
        console.log('Nap the lan ' + i);
        if (false) {
            isSuccess = true;
        }

    } while (!isSuccess && i <= 3);

* Break & continue in loop
    - break
    for (var i = 0; i < 10; i++) {
        if (i >= 5) {
            break;
        }
        console.log(i);
    }

    - continue
    for (var i = 0; i < 10; i++) {
        if (i % 2 === 0) {
            continue;
        }
        console.log(i);
    }

* Vòng lặp lồng nhau - Nested loop
    var myArray = [
        [1, 2],
        [3, 4],
        [5, 6]
    ]

    for (var i = 0; i < myArray.length; i++) {
        for (var j = 0; j < myArray[i].length; j++) {
            console.log(myArray[i][j]);
        }
    }

* Loop...

for (var i = 100; i > 0; i--) {
    console.log(i);
}

for (var i = 0; i <= 100; i += 5) {
    console.log(i);
}

* recursion
1. Xác định điểm dừng
2. Logic handle => Tạo ra điểm dừng

function countDown(num) {
    if (num > 0) {
        console.log(num);
        return countDown(num - 1);
    }
    return num;
}

countDown(10) ;

function loop(start, end, cb) {
    if (start < end) {
        cb(start);
        return loop(start + 1, end, cb);
    }
}

---------------------------------------------

var array = ['Javascript','PHP','Ruby'];

loop(0, array.length, function(index) {
    console.log('index: ' + index);
    console.log(array[index]);
});

---------------------------------------------

function loop(value) {
    if (value === 1) return 1;
    else if (value > 1) return value * (loop(value - 1));
    else return `lỗi`
}

console.log(loop(6));
